import Head from "next/head";
import Image from "next/image";
import Answer from "../components/Answer";
import { useState, useRef } from "react";
import Carousel from "react-bootstrap/Carousel";
import * as homeStyles from "../styles/Home.module.css";
import Skeleton, { SkeletonTheme } from "react-loading-skeleton";
import { useRouter } from "next/router";
export default function Home() {
  const router = useRouter();
  const { bookName } = router.query;
  const [showResult, setShowResult] = useState(false);
  const [gotResult, setGotResult] = useState(false);
  const [result, setResult] = useState("");
  const [passages, setPassages] = useState(["", "", ""]);
  const [question, setQuestion] = useState("");
  const [gotEmbeddings, setGotEmbeddings] = useState(true);
  const answerRef = useRef(null);
  function handleChange(event) {
    setQuestion(event.target.value);
  }

  const handleScroll = (ref) => {
    setTimeout(() => {
      window.scrollTo({
        top: ref.offsetTop,
        left: 100,
        behavior: "smooth",
      });
    }, 50);
  };

  async function generateAnswer() {
    let btnSubmit = document.getElementById("btnSubmit");
    if (question === "") {
      return;
    }

    btnSubmit.disabled = true;
    setGotResult(false);
    setShowResult(true);
    handleScroll(answerRef.current);
    let check = "false";
    const passageResponse = await fetch("/api/passages", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ question }),
    })
      .then((res) => res.json())
      .then((data) => {
        return data;
      });
    const passageData = passageResponse;
    setPassages([
      passageData.top_3_passages[0]["Content"],
      passageData.top_3_passages[1]["Content"],
      passageData.top_3_passages[2]["Content"],
    ]);
    const answerResponse = await fetch("/api/search", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        question: question,
        passages: passageData.all_passages,
      }),
    });
    const data = answerResponse.body;

    const reader = data.getReader();
    const decoder = new TextDecoder();
    let done = false;

    let answerResult = "";

    setGotResult(true);

    while (!done) {
      const { value, done: doneReading } = await reader.read();
      done = doneReading;
      const chunkValue = decoder.decode(value);
      answerResult += chunkValue;
      setResult(answerResult);
    }

    btnSubmit.disabled = false;
  }
  const handleKeyDown = (e) => {
    if (e.key === "Enter") {
      generateAnswer();
    }
  };

  return (
    <>
      <Head>
        <title>{bookName} GPT</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main id="main">
        <div
          className={`container ${homeStyles.container} ${homeStyles["landing-container"]}`}
        >
          <div
            className={`row ${homeStyles.row} ${homeStyles["landing-card"]} ${homeStyles["landing-bg"]}`}
          >
            {gotEmbeddings ? (
              <div className={`col-sm ${homeStyles["col-sm"]}`}>
                <div className={homeStyles["landing-header"]}>
                  I&apos;m {bookName}
                </div>
                <div className={homeStyles["form-container"]}>
                  <input
                    className={` col ${homeStyles.col} ${homeStyles["landing-search"]}`}
                    type="input"
                    placeholder=" Ask Me Anything"
                    onChange={handleChange}
                    onKeyDown={handleKeyDown}
                  ></input>
                  <button
                    id="btnSubmit"
                    className={`${homeStyles.btnSubmit}`}
                    onClick={generateAnswer}
                    type="submit"
                  ></button>
                </div>
              </div>
            ) : (
              <div className={`col-sm ${homeStyles["col-sm"]}`}>
                <div className={homeStyles["landing-header"]}>
                  <Skeleton />
                </div>
                <div className={homeStyles["form-container"]}>
                  <Skeleton width={600} height={100} />
                </div>
              </div>
            )}

            <div className={`col homeStyles.col`}>
              {gotEmbeddings ? (
                <div
                  className={`row ${homeStyles.row} ${homeStyles["template-mockup"]}`}
                >
                  <Carousel
                    controls={false}
                    interval="3000"
                    fade
                    variant="dark"
                  >
                    <Carousel.Item>
                      <a
                        href="https://bamitsmanas.gumroad.com/l/the-most-awesome-atomic-habits-guide-in-the-universe?layout=profile"
                        target="__blank"
                      >
                        <Image
                          className={homeStyles["template-mockup-image"]}
                          layout="fill"
                          src="/notion-mockup-1.png"
                          alt="Notion Mockup"
                          priority
                        />
                      </a>
                    </Carousel.Item>
                    <Carousel.Item>
                      <a
                        href="https://bamitsmanas.gumroad.com/l/the-most-awesome-atomic-habits-guide-in-the-universe?layout=profile"
                        target="__blank"
                      >
                        <Image
                          className={homeStyles["template-mockup-image"]}
                          layout="fill"
                          src="/notion-mockup-2.png"
                          alt="Notion Mockup"
                          priority
                        />
                      </a>
                    </Carousel.Item>
                    <Carousel.Item>
                      <a
                        href="https://bamitsmanas.gumroad.com/l/the-most-awesome-atomic-habits-guide-in-the-universe?layout=profile"
                        target="__blank"
                      >
                        <Image
                          className={homeStyles["template-mockup-image"]}
                          layout="fill"
                          src="/notion-mockup-3.png"
                          alt="Notion Mockup"
                          priority
                        />
                      </a>
                    </Carousel.Item>
                  </Carousel>
                  <div className={homeStyles["template-mockup-text"]}>
                    <a
                      href="https://bamitsmanas.gumroad.com/l/the-most-awesome-atomic-habits-guide-in-the-universe?layout=profile"
                      target="__blank"
                      className={homeStyles["cta-link"]}
                    >
                      Actualise Your Potential Now
                    </a>
                  </div>
                </div>
              ) : (
                <div
                  className={`row ${homeStyles.row} ${homeStyles["template-mockup"]}`}
                >
                  <Carousel
                    controls={false}
                    interval="3000"
                    fade
                    variant="dark"
                  >
                    <Carousel.Item>
                      <Skeleton width={600} height={400} />
                    </Carousel.Item>
                  </Carousel>
                </div>
              )}
            </div>
          </div>
        </div>
        <div ref={answerRef}>
          {showResult ? (
            <Answer
              bookName={bookName}
              gotResult={gotResult}
              answer={result}
              para1={passages[0]}
              para2={passages[1]}
              para3={passages[2]}
            />
          ) : (
            <div></div>
          )}
        </div>
        <footer
          id="footer"
          className={homeStyles.footer}
          style={{ textAlign: "center" }}
        >
          Created with ðŸ’™ by{" "}
          <a
            style={{ textDecoration: "underline" }}
            target="__blank"
            href="https://manasbam.com"
          >
            Manas
          </a>{" "}
          and{" "}
          <a
            target="__blank"
            style={{ textDecoration: "underline" }}
            href="https://github.com/sheldor07"
          >
            Yajat
          </a>
        </footer>
      </main>
    </>
  );
}
